openapi: 3.0.3 # https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md

info:
  version: 1.1.1
  title: storage
  description: >
    S3 Storage API для сервисов cargo

servers:
  - url: https://storage.cargo.b-resh.ru
    description: API on staging environment
  - url: https://storage.services.localhost
    description: API on local infra
  - url: http://localhost:8000
    description: API on local debug

tags:
  - name: storage
    description: Хранилище

components:
  securitySchemes:
    jwt:
      description: >
        Авторизационный токен (authToken).  
        
        Получить можно на [странице авторизации](/auth/).
      type: http
      scheme: bearer
      bearerFormat: JWT
    integrations:
      description: >
        JWT-токен для интеграций.
        
        Возможно получить на текущем сервере с помощью команды:

          ```bash
          cd /var/www/gateway && make jwt
          ```
      type: apiKey
      in: header
      name: X-Integrations-Token

paths:

  /api/1/upload:
    summary: Загрузка файла на сервер хранения
    description: >
      Загружает файл на сервер для текущего авторизованного пользователя.
      Возвращает ошибку, если пользователь не авторизован.
      Размер загружаемого файла ограничен — максимум 100 мегабайтов.
      В случае успеха вернёт ответ с данными загруженного файла и записи о нём в базе данных.
    parameters:
      - $ref: "./common/schema.yaml#/components/parameters/filename"
    post:
      tags: [ 'storage' ]
      security: [ { jwt: [ ], integrations: [ ] } ]
      operationId: Upload
      requestBody:
        $ref: "./storage/schema.yaml#/components/requestBodies/upload"
      responses:
        '200':
          $ref: "./storage/schema.yaml#/components/responses/upload"
        '400':
          $ref: "./common/schema.yaml#/components/responses/errorBadRequest"
        '401':
          $ref: "./common/schema.yaml#/components/responses/errorUnauthorized"
        '429':
          $ref: "./common/schema.yaml#/components/responses/errorTooManyRequests"
        '500':
          $ref: "./common/schema.yaml#/components/responses/errorInternal"

  /api/1/download/{uid}:
    summary: Скачивание файла с сервера
    description: >
      Скачивает файл с сервера без проверки авторизации.
    parameters:
      - $ref: "./storage/schema.yaml#/components/parameters/uid"
    get:
      tags: [ 'storage' ]
      operationId: Download
      responses:
        '200':
          $ref: "./storage/schema.yaml#/components/responses/download"
        '400':
          $ref: "./common/schema.yaml#/components/responses/errorBadRequest"
        '401':
          $ref: "./common/schema.yaml#/components/responses/errorUnauthorized"
        '429':
          $ref: "./common/schema.yaml#/components/responses/errorTooManyRequests"
        '500':
          $ref: "./common/schema.yaml#/components/responses/errorInternal"
    options:
      tags: [ 'storage' ]
      operationId: DownloadOptions
      responses:
        '200':
          $ref: "./storage/schema.yaml#/components/responses/download"

  /api/1/files/list: # TODO IMPROVE OR DELETE
    summary: Получение списка файлов для текущего авторизованного пользователя
    description: >
      Возвращает набор данных для каждого пользовательского файла, загруженного на S3-хранилище
    get:
      tags: [ 'storage' ]
      security: [ { jwt: [ ], integrations: [ ] } ]
      operationId: FilesList
      responses:
        '200':
          $ref: "./storage/schema.yaml#/components/responses/filesList"
        '400':
          $ref: "./common/schema.yaml#/components/responses/errorBadRequest"
        '401':
          $ref: "./common/schema.yaml#/components/responses/errorUnauthorized"
        '429':
          $ref: "./common/schema.yaml#/components/responses/errorTooManyRequests"
        '500':
          $ref: "./common/schema.yaml#/components/responses/errorInternal"
